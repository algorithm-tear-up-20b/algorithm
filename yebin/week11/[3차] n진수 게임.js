/**
채점을 시작합니다.
정확성  테스트
테스트 1 〉	통과 (0.05ms, 33.5MB)
테스트 2 〉	통과 (0.13ms, 33.4MB)
테스트 3 〉	통과 (0.13ms, 33.4MB)
테스트 4 〉	통과 (0.14ms, 33.4MB)
테스트 5 〉	통과 (0.20ms, 33.4MB)
테스트 6 〉	통과 (0.19ms, 33.5MB)
테스트 7 〉	통과 (0.29ms, 33.5MB)
테스트 8 〉	통과 (0.16ms, 33.5MB)
테스트 9 〉	통과 (0.27ms, 33.5MB)
테스트 10 〉	통과 (0.18ms, 33.4MB)
테스트 11 〉	통과 (0.17ms, 33.4MB)
테스트 12 〉	통과 (0.18ms, 33.5MB)
테스트 13 〉	통과 (0.28ms, 33.5MB)
테스트 14 〉	통과 (18.24ms, 43.8MB)
테스트 15 〉	통과 (45.90ms, 43.6MB)
테스트 16 〉	통과 (28.84ms, 43.7MB)
테스트 17 〉	통과 (0.69ms, 33.6MB)
테스트 18 〉	통과 (0.61ms, 33.7MB)
테스트 19 〉	통과 (0.26ms, 33.5MB)
테스트 20 〉	통과 (0.52ms, 33.7MB)
테스트 21 〉	통과 (7.42ms, 38.9MB)
테스트 22 〉	통과 (1.46ms, 34.1MB)
테스트 23 〉	통과 (8.41ms, 39MB)
테스트 24 〉	통과 (19.46ms, 43.2MB)
테스트 25 〉	통과 (15.67ms, 40.2MB)
테스트 26 〉	통과 (1.57ms, 34.2MB)
채점 결과
정확성: 100.0
합계: 100.0 / 100.0
 */

function solution(n, t, m, p) {
  // 게임에서 나올 모든 숫자
  let allAnswers = "";
  for (let i = 0; i <= t * m; i++) {
    allAnswers += i.toString(n);
  }

  let result = "";
  let i = p - 1;
  while (result.length < t) {
    result += allAnswers[i];
    i += m;
  }

  return result.toUpperCase();
}

//다른 사람의 풀이
// 로직은 크게 다르지 않지만 시간이 훨씬 적게 든다.
// 내 코드의 i 연산에서 시간을 많이 잡아먹었는지 ????
function solution(n, t, m, p) {
  let tubeT = new Array(t).fill(0).map((a, i) => i * m + p - 1);
  let line = "";
  let max = m * t;
  for (let i = 0; line.length <= max; i++) {
    line += i.toString(n);
  }
  return tubeT
    .map((a) => line[a])
    .join("")
    .toUpperCase();
}

/**
채점을 시작합니다.
정확성  테스트
테스트 1 〉	통과 (0.07ms, 33.5MB)
테스트 2 〉	통과 (0.15ms, 33.4MB)
테스트 3 〉	통과 (0.15ms, 33.6MB)
테스트 4 〉	통과 (0.24ms, 33.4MB)
테스트 5 〉	통과 (0.18ms, 33.4MB)
테스트 6 〉	통과 (0.18ms, 33.6MB)
테스트 7 〉	통과 (0.18ms, 33.5MB)
테스트 8 〉	통과 (0.29ms, 33.5MB)
테스트 9 〉	통과 (0.19ms, 33.5MB)
테스트 10 〉	통과 (0.29ms, 33.5MB)
테스트 11 〉	통과 (0.29ms, 33.5MB)
테스트 12 〉	통과 (0.20ms, 33.4MB)
테스트 13 〉	통과 (0.20ms, 33.6MB)
테스트 14 〉	통과 (8.31ms, 38.8MB)
테스트 15 〉	통과 (10.46ms, 38.9MB)
테스트 16 〉	통과 (7.47ms, 38.9MB)
테스트 17 〉	통과 (0.27ms, 33.5MB)
테스트 18 〉	통과 (0.42ms, 33.6MB)
테스트 19 〉	통과 (0.34ms, 33.4MB)
테스트 20 〉	통과 (0.49ms, 33.5MB)
테스트 21 〉	통과 (0.97ms, 33.9MB)
테스트 22 〉	통과 (0.49ms, 33.6MB)
테스트 23 〉	통과 (1.28ms, 34MB)
테스트 24 〉	통과 (1.52ms, 33.9MB)
테스트 25 〉	통과 (1.60ms, 33.8MB)
테스트 26 〉	통과 (1.12ms, 33.7MB)
채점 결과
정확성: 100.0
합계: 100.0 / 100.0
 */
