/**
채점을 시작합니다.
정확성  테스트
테스트 1 〉	통과 (2.80ms, 37.3MB)
테스트 2 〉	통과 (4.48ms, 37.3MB)
테스트 3 〉	통과 (2.71ms, 37.4MB)
테스트 4 〉	통과 (2.98ms, 37.3MB)
테스트 5 〉	통과 (3.04ms, 37.3MB)
테스트 6 〉	통과 (3.33ms, 37.2MB)
테스트 7 〉	통과 (5.06ms, 37.2MB)
테스트 8 〉	통과 (5.04ms, 37.2MB)
테스트 9 〉	통과 (3.08ms, 37.4MB)
테스트 10 〉	통과 (7.59ms, 37.3MB)
테스트 11 〉	통과 (0.28ms, 33.5MB)
테스트 12 〉	통과 (0.06ms, 33.5MB)
테스트 13 〉	통과 (0.10ms, 33.5MB)
테스트 14 〉	통과 (0.09ms, 33.5MB)
테스트 15 〉	통과 (0.07ms, 33.6MB)
테스트 16 〉	통과 (0.06ms, 33.5MB)
테스트 17 〉	통과 (0.07ms, 33.5MB)
테스트 18 〉	통과 (0.07ms, 33.5MB)
테스트 19 〉	통과 (0.06ms, 33.6MB)
테스트 20 〉	통과 (0.07ms, 33.5MB)
테스트 21 〉	통과 (0.22ms, 33.5MB)
테스트 22 〉	통과 (0.33ms, 33.5MB)
테스트 23 〉	통과 (0.36ms, 33.6MB)
테스트 24 〉	통과 (0.80ms, 33.8MB)
테스트 25 〉	통과 (5.73ms, 36.5MB)
테스트 26 〉	통과 (20.53ms, 41MB)
테스트 27 〉	통과 (79.30ms, 63.9MB)
테스트 28 〉	통과 (51.90ms, 45.5MB)
테스트 29 〉	통과 (65.03ms, 50.8MB)
테스트 30 〉	통과 (95.03ms, 63.9MB)
테스트 31 〉	통과 (18.20ms, 37.5MB)
테스트 32 〉	통과 (13.99ms, 38MB)
테스트 33 〉	통과 (66.71ms, 54.1MB)
테스트 34 〉	통과 (58.40ms, 51MB)
채점 결과
정확성: 100.0
합계: 100.0 / 100.0
 */

function solution(k, tangerine) {
  let obj = {};
  tangerine.forEach((tan) => (obj[tan] = obj[tan] + 1 || 1));
  const arr = Object.values(obj).sort((a, b) => b - a);
  let count = 0;
  for (let i = 0; i < arr.length; i++) {
    k -= arr[i];
    count++;
    if (k <= 0) return count;
  }
}
