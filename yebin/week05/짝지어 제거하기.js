/**
채점을 시작합니다.
정확성  테스트
테스트 1 〉	통과 (0.04ms, 33.4MB)
테스트 2 〉	통과 (5.93ms, 38.5MB)
테스트 3 〉	통과 (6.54ms, 38.3MB)
테스트 4 〉	통과 (6.65ms, 38.7MB)
테스트 5 〉	통과 (6.77ms, 38.7MB)
테스트 6 〉	통과 (7.35ms, 38.7MB)
테스트 7 〉	통과 (6.71ms, 38.7MB)
테스트 8 〉	통과 (6.70ms, 38.9MB)
테스트 9 〉	통과 (0.04ms, 33.5MB)
테스트 10 〉	통과 (0.17ms, 33.4MB)
테스트 11 〉	통과 (0.04ms, 33.4MB)
테스트 12 〉	통과 (0.04ms, 33.4MB)
테스트 13 〉	통과 (0.04ms, 33.6MB)
효율성  테스트
테스트 1 〉	통과 (29.46ms, 51.5MB)
테스트 2 〉	통과 (14.09ms, 39.8MB)
테스트 3 〉	통과 (27.51ms, 43.8MB)
테스트 4 〉	통과 (26.33ms, 43.9MB)
테스트 5 〉	통과 (27.28ms, 43.8MB)
테스트 6 〉	통과 (25.51ms, 43.8MB)
테스트 7 〉	통과 (26.68ms, 43.7MB)
테스트 8 〉	통과 (26.44ms, 47MB)
채점 결과
정확성: 60.2
효율성: 39.8
합계: 100.0 / 100.0
 */

function solution(s) {
  let stack = [];
  for (let i = 0; i < s.length; i++) {
    if (!stack.length || stack[stack.length - 1] !== s[i]) stack.push(s[i]);
    else stack.pop();
  }
  return stack.length ? 0 : 1;
}
