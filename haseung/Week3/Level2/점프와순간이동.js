function solution(n) {
  // n의 길이만큼 보드가 주어짐
  // 점프랑 순간이동 이 2가지 경우로 나눠야 할 듯
  // 건전지 사용량이 제일 적은 경우, 그 사용량을 리턴
  // 점프의 경우에는 이동한 칸 수 만큼 건전지 사용량이 들고, 순간이동은 건전지 사용량이 들지 않고 현재까지 온 거리의 2배만큼 이동한다.
  let answer = 0;
  while (n > 0) {
    if (n % 2 === 1) {
      n = (n - 1) / 2;
      answer++;
    } else n = n / 2;
  }
  return answer;
}

/*정확성  테스트
테스트 1 〉	통과 (0.03ms, 33.5MB)
테스트 2 〉	통과 (0.03ms, 33.5MB)
테스트 3 〉	통과 (0.03ms, 33.4MB)
테스트 4 〉	통과 (0.03ms, 33.5MB)
테스트 5 〉	통과 (0.03ms, 33.6MB)
테스트 6 〉	통과 (0.03ms, 33.6MB)
테스트 7 〉	통과 (0.04ms, 33.4MB)
테스트 8 〉	통과 (0.04ms, 33.5MB)
테스트 9 〉	통과 (0.04ms, 33.6MB)
테스트 10 〉	통과 (0.03ms, 33.5MB)
테스트 11 〉	통과 (0.04ms, 33.4MB)
테스트 12 〉	통과 (0.05ms, 33.5MB)
테스트 13 〉	통과 (0.04ms, 33.5MB)
테스트 14 〉	통과 (0.03ms, 33.4MB)
테스트 15 〉	통과 (0.05ms, 33.6MB)
테스트 16 〉	통과 (0.04ms, 33.5MB)
테스트 17 〉	통과 (0.03ms, 33.6MB)
테스트 18 〉	통과 (0.03ms, 33.5MB)

효율성  테스트
테스트 1 〉	통과 (0.04ms, 33.3MB)
테스트 2 〉	통과 (0.04ms, 33.4MB)
테스트 3 〉	통과 (0.03ms, 33.5MB)
테스트 4 〉	통과 (0.04ms, 33.3MB)
테스트 5 〉	통과 (0.05ms, 33.1MB)
테스트 6 〉	통과 (0.04ms, 33.3MB)
테스트 7 〉	통과 (0.05ms, 33.3MB)
테스트 8 〉	통과 (0.04ms, 32.9MB)
테스트 9 〉	통과 (0.04ms, 33.3MB)
테스트 10 〉	통과 (0.05ms, 33MB)
채점 결과
정확성: 60.0
효율성: 40.0
합계: 100.0 / 100.0*/
