/*
정확성  테스트
테스트 1 〉	통과 (0.06ms, 33.6MB)
테스트 2 〉	통과 (0.19ms, 33.6MB)
테스트 3 〉	통과 (0.19ms, 33.6MB)
테스트 4 〉	통과 (0.30ms, 33.6MB)
테스트 5 〉	통과 (7.83ms, 38.2MB)
테스트 6 〉	통과 (0.61ms, 37.4MB)
테스트 7 〉	통과 (4.92ms, 38.3MB)
테스트 8 〉	통과 (0.54ms, 37MB)
테스트 9 〉	통과 (5.14ms, 38.3MB)
테스트 10 〉	통과 (0.51ms, 33.8MB)
테스트 11 〉	통과 (7.21ms, 38MB)
테스트 12 〉	통과 (0.05ms, 33.4MB)
테스트 13 〉	통과 (0.07ms, 33.6MB)
테스트 14 〉	통과 (0.23ms, 33.6MB)
테스트 15 〉	통과 (0.06ms, 33.5MB)
테스트 16 〉	통과 (0.17ms, 33.5MB)
테스트 17 〉	통과 (0.17ms, 33.4MB)
테스트 18 〉	통과 (0.37ms, 33.9MB)
테스트 19 〉	통과 (0.41ms, 33.7MB)
테스트 20 〉	통과 (0.21ms, 33.6MB)
테스트 21 〉	통과 (0.19ms, 33.5MB)
테스트 22 〉	통과 (0.71ms, 37.4MB)
테스트 23 〉	통과 (0.22ms, 33.6MB)
테스트 24 〉	통과 (0.23ms, 33.7MB)
테스트 25 〉	통과 (0.31ms, 33.6MB)
테스트 26 〉	통과 (0.19ms, 33.6MB)
테스트 27 〉	통과 (0.25ms, 33.6MB)
테스트 28 〉	통과 (0.24ms, 33.6MB)
테스트 29 〉	통과 (0.05ms, 33.6MB)
테스트 30 〉	통과 (5.12ms, 38.4MB)
10분
*/
function solution(s) {
  // 1. for문을 돌면서 오브젝트에 각 key와 위치(i)를 넣는다.
  // 2. 매번 obj는 업데이트가 되고 매번 arr에 값이 추가가 된다.

  const arr = [];
  const obj = [];

  for (let i = 0; i < s.length; i++) {
    //obj[s[i]] === 0 일때 조건을 걸러야함
    if (obj[s[i]] !== undefined) arr.push(i - obj[s[i]]);
    else arr.push(-1);

    //obj에 i저장
    obj[s[i]] = i;
  }

  return arr;
}
