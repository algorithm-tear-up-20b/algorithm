/*
[PGS] 문자열 나누기 /LV.1 / 30분
*/

/*
채점을 시작합니다.
정확성  테스트
테스트 1 〉	통과 (0.06ms, 33.6MB)
테스트 2 〉	통과 (0.29ms, 33.5MB)
테스트 3 〉	통과 (0.43ms, 33.5MB)
테스트 4 〉	통과 (0.04ms, 33.5MB)
테스트 5 〉	통과 (0.05ms, 33.4MB)
테스트 6 〉	통과 (0.07ms, 33.5MB)
테스트 7 〉	통과 (0.07ms, 33.4MB)
테스트 8 〉	통과 (0.13ms, 33.4MB)
테스트 9 〉	통과 (0.25ms, 33.4MB)
테스트 10 〉	통과 (0.37ms, 33.5MB)
테스트 11 〉	통과 (0.32ms, 33.5MB)
테스트 12 〉	통과 (0.32ms, 33.5MB)
테스트 13 〉	통과 (0.50ms, 33.3MB)
테스트 14 〉	통과 (0.49ms, 33.3MB)
테스트 15 〉	통과 (0.23ms, 33.4MB)
테스트 16 〉	통과 (0.45ms, 33.6MB)
테스트 17 〉	통과 (0.28ms, 33.6MB)
테스트 18 〉	통과 (0.67ms, 33.5MB)
테스트 19 〉	통과 (0.32ms, 33.5MB)
테스트 20 〉	통과 (0.46ms, 33.5MB)
테스트 21 〉	통과 (0.48ms, 33.5MB)
테스트 22 〉	통과 (0.35ms, 33.4MB)
테스트 23 〉	통과 (0.20ms, 33.6MB)
테스트 24 〉	통과 (0.29ms, 33.6MB)
테스트 25 〉	통과 (0.48ms, 33.4MB)
테스트 26 〉	통과 (0.45ms, 33.5MB)
테스트 27 〉	통과 (0.40ms, 33.4MB)
테스트 28 〉	통과 (0.30ms, 33.5MB)
테스트 29 〉	통과 (0.53ms, 33.6MB)
테스트 30 〉	통과 (0.32ms, 33.5MB)
테스트 31 〉	통과 (0.04ms, 33.5MB)
테스트 32 〉	통과 (0.04ms, 33.5MB)
테스트 33 〉	통과 (0.04ms, 33.5MB)
테스트 34 〉	통과 (0.04ms, 33.5MB)
테스트 35 〉	통과 (0.12ms, 33.5MB)
테스트 36 〉	통과 (0.13ms, 33.4MB)
테스트 37 〉	통과 (0.12ms, 33.4MB)
테스트 38 〉	통과 (0.12ms, 33.5MB)
테스트 39 〉	통과 (0.12ms, 33.4MB)
테스트 40 〉	통과 (0.12ms, 33.5MB)
테스트 41 〉	통과 (0.52ms, 33.5MB)
테스트 42 〉	통과 (0.51ms, 33.5MB)
*/

function solution(s) {
  let answerCnt = 0;
  let x = s[0];
  let xCnt = 0;
  let yCnt = 0;

  for (let i = 0; i < s.length; i++) {
    if (s[i] === x) xCnt++;
    else yCnt++;
    if (xCnt === yCnt) {
      x = s[i + 1];
      xCnt = 0;
      yCnt = 0;
      answerCnt++;
    }
  }
  return xCnt !== yCnt ? answerCnt + 1 : answerCnt;
}

console.log(solution('banana'));

/*/*
[문제]
- 문자열이 주어질 때 조건에 맞춰 나눠진 문자열의 갯수를 리턴
- 1. 첫번째 문자열이 x 라고 할 때 x와 x외의 문자열이 나온 횟수가 같아지는 시점에 문자열 자름.
- 2. s에서 분리된 문자열부터 시작하여 나머지 과정을 반복
- 총 분리된 횟수를 리턴.

[접근 1]
- 반복문을 돌아서 x와 y카운트를 세어준다.
- x와 y가 같아지는 시점에 answerCnt를 증가하고, 다음 x를 초기화, xCnt, yCnt 도 초기화한다.
- 반복을 다 돌았는데 xCnt 와 yCnt 가 다르다면, 잘리지 않은 나머지가 남은 것이므로 카운트를 1 추가한다.
*/
