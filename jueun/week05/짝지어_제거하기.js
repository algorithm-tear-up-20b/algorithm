/*
정확성  테스트
테스트 1 〉	통과 (0.05ms, 33.5MB)
테스트 2 〉	통과 (8.42ms, 38MB)
테스트 3 〉	통과 (10.97ms, 38.1MB)
테스트 4 〉	통과 (10.84ms, 38.4MB)
테스트 5 〉	통과 (10.36ms, 38.4MB)
테스트 6 〉	통과 (10.48ms, 38.5MB)
테스트 7 〉	통과 (10.36ms, 38.4MB)
테스트 8 〉	통과 (10.39ms, 38.5MB)
테스트 9 〉	통과 (0.04ms, 33.4MB)
테스트 10 〉	통과 (0.14ms, 33.5MB)
테스트 11 〉	통과 (0.04ms, 33.5MB)
테스트 12 〉	통과 (0.06ms, 33.5MB)
테스트 13 〉	통과 (0.04ms, 33.5MB)
효율성  테스트
테스트 1 〉	통과 (69.56ms, 51.6MB)
테스트 2 〉	통과 (40.30ms, 39.5MB)
테스트 3 〉	통과 (66.79ms, 43.8MB)
테스트 4 〉	통과 (73.12ms, 43.6MB)
테스트 5 〉	통과 (67.55ms, 43.9MB)
테스트 6 〉	통과 (72.85ms, 43.7MB)
테스트 7 〉	통과 (73.65ms, 43.7MB)
테스트 8 〉	통과 (67.61ms, 46.7MB)
채점 결과
정확성: 60.2
효율성: 39.8
합계: 100.0 / 100.0
*/

function solution(s) {
  let left = [];
  let sLength = s.length;

  for (let i = 0; i < sLength; i++) {
    if (left.at(-1) === s[i]) {
      left.pop();
    } else {
      left.push(s[i]);
    }
  }

  if (left.length > 0) return 0;
  else return 1;
}
